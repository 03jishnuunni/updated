# Generated by Django 5.1.7 on 2025-04-01 19:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestmentProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255)),
                ('total_investment', models.DecimalField(decimal_places=2, max_digits=15)),
                ('min_roi', models.DecimalField(decimal_places=2, help_text='Minimum Return on Investment (%)', max_digits=5)),
                ('max_roi', models.DecimalField(decimal_places=2, help_text='Maximum Return on Investment (%)', max_digits=5)),
                ('project_description', models.TextField()),
                ('image1', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('has_requested', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('temp_password', models.CharField(blank=True, max_length=100, null=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_resets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('transaction_type', models.CharField(choices=[('investment', 'Investment'), ('withdrawal', 'Withdrawal')], max_length=20)),
                ('narration', models.TextField(blank=True, null=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='transaction_receipts/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('return_period', models.CharField(blank=True, max_length=20, null=True)),
                ('return_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('transaction_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='mafazaapp.investmentproject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('PASSPORT', 'Passport'), ('EMIRATES_ID', 'Emirates ID'), ('CONTRACT', 'Agreement/Contract'), ('PROOF_OF_ADDRESS', 'Proof of Address'), ('BANK_STATEMENT', 'Bank Statement'), ('SELFIE', 'Selfie with ID'), ('OTHER', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='user_documents/')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected - Needs Resubmission')], default='PENDING', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_documents', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Document',
                'verbose_name_plural': 'User Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('project_name', models.CharField(max_length=255)),
                ('narration', models.TextField(blank=True, null=True)),
                ('principal_investment', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('returns', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('withdrawal', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='transaction_receipts/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='mafazaapp.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='AssignedProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_of_interest', models.DecimalField(decimal_places=2, help_text='Rate of Interest (%)', max_digits=5)),
                ('return_period', models.CharField(choices=[('2m', '2 Minute'), ('10m', '10 Minutes'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semiannual', 'Semiannual'), ('annual', 'Annual')], max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_projects', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_users', to='mafazaapp.investmentproject')),
            ],
            options={
                'unique_together': {('user', 'project')},
            },
        ),
    ]
